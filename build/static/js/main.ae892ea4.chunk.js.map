{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","react_router_dom","aria-current","to","aboutText","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","even","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","About","myStyle","setMyStyle","_useState3","_useState4","btntext","setBtnText","aria-labelledby","data-bs-parent","border","protoTypes","PropTypes","string","isRequired","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","messege","setTimeout","body","components_Alert","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ae892ea4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link></li>\r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              {/* <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Search\r\n              </button> */}\r\n              <div\r\n                className={`form-check form-switch text-${\r\n                  props.mode === \"light\" ? \"dark\" : \"light\"\r\n                }`}\r\n              >\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  onClick={props.toggleMode}\r\n                  id=\"flexSwitchCheckDefaullt\"\r\n                />\r\n                <label\r\n                  className=\"form-check-label\"\r\n                  htmlFor=\"flexSwitchCheckChecked\"\r\n                >\r\n                  Enable Dark mode\r\n                </label>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.protoTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n  aboutText: \"about\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    //   console.log(\"Uppercase was Clicked: \" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\", \"success\")\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\", \"success\")\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared\", \"success\")\r\n  };\r\n  const handleOnChange = (even) => {\r\n    setText(even.target.value);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    text.setSelectionRange(0, 9999);\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied clipboard\", \"success\")\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed\", \"success\")\r\n  };\r\n  const [text, setText] = useState(\"Enter text here\");\r\n  // text = \"change the text\"; // wrong way to change the state\r\n  // setText = (\"change the text\"); // wrong way to change the state\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n          Convert to Upercase\r\n        </button>\r\n        <button className=\"btn btn-success mx-1\" onClick={handleLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-danger mx-1\" onClick={handleClearClick}>\r\n          Clear text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\r\n          Copy text\r\n        </button>\r\n        <button className=\"btn btn-info mx-1\" onClick={handleExtraSpaces}>\r\n          Remove extra spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h2>Text Summery </h2>\r\n        <p>\r\n          {text.split(\" \").length} word and {text.length} cherecter\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textbox to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\nconst [myStyle, setMyStyle] = useState({\r\n  color: \"black\",\r\n  backgroundColor: \"white\",\r\n});\r\n\r\nconst [btntext, setBtnText] = useState(\"Enable Light Mode\");\r\n\r\nconst toggleStyle = () => {\r\n  if (myStyle.color === \"black\") {\r\n    setMyStyle({\r\n      color: \"White\",\r\n      backgroundColor: \"black\",\r\n      border: \"1px solid white\"\r\n    });\r\n    setBtnText(\"Enable Dark Mode\");\r\n  } else {\r\n    setMyStyle({\r\n      color: \"black\",\r\n      backgroundColor: \"white\",\r\n    });\r\n    setBtnText(\"Enable Light Mode\");\r\n  }\r\n};\r\n\r\n  return (\r\n    <div className=\"container\" style={myStyle}>\r\n      <h1 className=\"my-3\">About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"my-3\">\r\n        <button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary\">\r\n          {btntext}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert &&  <div>\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong>{props.alert.msg}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is enabled ore not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (messege, type) => {\n    setAlert({\n      msg: messege,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enable\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'install TextUtils now';\n      // }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Dark mode has been enable\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    <>\n    <Router>\n      <Navbar title=\"textUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n        <TextForm showAlert={showAlert} heading=\"Enter the text to analyze bellow\" mode={mode}/>\n          </Route>\n      </Switch>\n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}